// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package dbsqlc

import (
	"net/netip"
	"time"

	"app/internal/types"
	"github.com/google/uuid"
)

type Address struct {
	ID           int64      `json:"id"`
	EntranceID   int64      `json:"entrance_id"`
	Flat         *string    `json:"flat"`
	Geotag       *string    `json:"geotag"`
	ObjectTypeID *int64     `json:"object_type_id"`
	Name         *string    `json:"name"`
	Comment      *string    `json:"comment"`
	ServiceArea  *string    `json:"service_area"`
	DeletedAt    *time.Time `json:"deleted_at"`
	CreatedAt    time.Time  `json:"created_at"`
	UpdatedAt    time.Time  `json:"updated_at"`
}

type Building struct {
	ID              int64          `json:"id"`
	StreetID        int64          `json:"street_id"`
	Name            *string        `json:"name"`
	BuildingType    *string        `json:"building_type"`
	Area            *float64       `json:"area"`
	CountEntrances  int32          `json:"count_entrances"`
	CountApartments int32          `json:"count_apartments"`
	CountResidents  int32          `json:"count_residents"`
	Latitude        *float64       `json:"latitude"`
	Longitude       *float64       `json:"longitude"`
	AirID           *string        `json:"air_id"`
	TenantID        types.TenantID `json:"tenant_id"`
	DeletedAt       *time.Time     `json:"deleted_at"`
}

type City struct {
	ID        int64      `json:"id"`
	Name      string     `json:"name"`
	RegionID  int64      `json:"region_id"`
	AirID     *string    `json:"air_id"`
	DeletedAt *time.Time `json:"deleted_at"`
	CreatedAt time.Time  `json:"created_at"`
	UpdatedAt time.Time  `json:"updated_at"`
}

type Config struct {
	ID           int64   `json:"id"`
	Name         *string `json:"name"`
	Active       *bool   `json:"active"`
	ExtraOptions *string `json:"extra_options"`
}

type Consumer struct {
	ID                    int64          `json:"id"`
	Name                  *string        `json:"name"`
	Delete                *bool          `json:"delete"`
	Inn                   *string        `json:"inn"`
	Phone                 *string        `json:"phone"`
	Organizationname      *string        `json:"organizationname"`
	Email                 *string        `json:"email"`
	Address               *string        `json:"address"`
	ConsumerCategoryID    *int32         `json:"consumer_category_id"`
	ClientID              *string        `json:"client_id"`
	BirthDay              *string        `json:"birth_day"`
	Alias                 *string        `json:"alias"`
	Organizationnameshort *string        `json:"organizationnameshort"`
	SupervizorName        *string        `json:"supervizor_name"`
	LegalAddress          *string        `json:"legal_address"`
	ContactName           *string        `json:"contact_name"`
	ContactPosit          *string        `json:"contact_posit"`
	AdditionalPhone1      *string        `json:"additional_phone1"`
	AdditionalPhone2      *string        `json:"additional_phone2"`
	TenantID              types.TenantID `json:"tenant_id"`
	DeletedAt             *time.Time     `json:"deleted_at"`
	CreatedAt             *time.Time     `json:"created_at"`
	UpdatedAt             *time.Time     `json:"updated_at"`
}

type ConsumerCategory struct {
	ID   int64   `json:"id"`
	Name *string `json:"name"`
}

type Contracts struct {
	ID                  int64      `json:"id"`
	AddressID           *int64     `json:"address_id"`
	ContractsCategoryID *int64     `json:"contracts_category_id"`
	ConsumerID          *int64     `json:"consumer_id"`
	GisJkhID            *string    `json:"gis_jkh_id"`
	ContractNumber      *string    `json:"contract_number"`
	LsHeat              *string    `json:"ls_heat"`
	LsWater             *string    `json:"ls_water"`
	LsElectro           *string    `json:"ls_electro"`
	LsGas               *string    `json:"ls_gas"`
	DeletedAt           *time.Time `json:"deleted_at"`
	CreatedAt           *time.Time `json:"created_at"`
	UpdatedAt           *time.Time `json:"updated_at"`
	StartDate           *time.Time `json:"start_date"`
	EndDate             *time.Time `json:"end_date"`
}

type ContractsCategory struct {
	ID              int64   `json:"id"`
	Name            *string `json:"name"`
	DeleteTimestamp *int64  `json:"delete_timestamp"`
}

type DeviceEvents struct {
	ID        uuid.UUID  `json:"id"`
	Name      string     `json:"name"`
	DeviceID  *int64     `json:"device_id"`
	CreatedAt *time.Time `json:"created_at"`
	Data      []byte     `json:"data"`
}

type DeviceSourceTypeDictionaries struct {
	ID                   int64   `json:"id"`
	DevicesSrcTypeID     *int64  `json:"devices_src_type_id"`
	GroupName            *string `json:"group_name"`
	VariableName         *string `json:"variable_name"`
	Description          *string `json:"description"`
	DevicesMeasureUnitID *int64  `json:"devices_measure_unit_id"`
}

type Devices struct {
	ID                   int64          `json:"id"`
	UspdID               *int64         `json:"uspd_id"`
	Name                 *string        `json:"name"`
	Sn                   *string        `json:"sn"`
	NetAddress           *string        `json:"net_address"`
	StartValue           *float64       `json:"start_value"`
	CreatedAt            *time.Time     `json:"created_at"`
	CheckInterval        *int32         `json:"check_interval"`
	LastCheckDate        *time.Time     `json:"last_check_date"`
	SealingDate          *time.Time     `json:"sealing_date"`
	InstallPlace         *string        `json:"install_place"`
	DevicesTypeID        *int64         `json:"devices_type_id"`
	StatusID             *int64         `json:"status_id"`
	TenantID             types.TenantID `json:"tenant_id"`
	Uuid                 uuid.UUID      `json:"uuid"`
	DeletedAt            *time.Time     `json:"deleted_at"`
	UpdatedAt            *time.Time     `json:"updated_at"`
	DevicesMeasureUnitID *int64         `json:"devices_measure_unit_id"`
	DevicesParamID       *int64         `json:"devices_param_id"`
	PollingStateID       *int32         `json:"polling_state_id"`
	DevicesModelID       *int64         `json:"devices_model_id"`
	DevicesStartTime     *time.Time     `json:"devices_start_time"`
	DevicesEndTime       *time.Time     `json:"devices_end_time"`
}

type DevicesChannels struct {
	ID                           int64   `json:"id"`
	Name                         *string `json:"name"`
	Description                  *string `json:"description"`
	ChannelFromDriver            *int64  `json:"channel_from_driver"`
	Formula                      *string `json:"formula"`
	DevicesInputParametersTypeID *int64  `json:"devices_input_parameters_type_id"`
	IsNormalOpenType             *bool   `json:"is_normal_open_type"`
	DeviceID                     *int64  `json:"device_id"`
	DevicesSrcTypeID             *int64  `json:"devices_src_type_id"`
}

type DevicesColumnMetadata struct {
	ID                   int32  `json:"id"`
	Type                 string `json:"type"`
	ParentID             *int32 `json:"parent_id"`
	ColumnName           string `json:"column_name"`
	Alias                string `json:"alias"`
	DisplayName          string `json:"display_name"`
	DevicesMeasureUnitID *int64 `json:"devices_measure_unit_id"`
}

type DevicesDiscreteInputStatuses struct {
	ID                           int64   `json:"id"`
	DevicesInputParametersTypeID int64   `json:"devices_input_parameters_type_id"`
	IsNormalOpenType             *bool   `json:"is_normal_open_type"`
	StatusDiscreteOpen           *string `json:"status_discrete_open"`
	StatusDiscreteClose          *string `json:"status_discrete_close"`
}

type DevicesHeatTs struct {
	ID        int64      `json:"id"`
	DevicesID *int64     `json:"devices_id"`
	Num       *int32     `json:"num"`
	Enabled   *bool      `json:"enabled"`
	Name      *string    `json:"name"`
	DeletedAt *time.Time `json:"deleted_at"`
	CreatedAt *time.Time `json:"created_at"`
	UpdatedAt *time.Time `json:"updated_at"`
}

type DevicesInputParametersTypes struct {
	ID   int64   `json:"id"`
	Name *string `json:"name"`
}

type DevicesMeasureUnits struct {
	ID                           int64   `json:"id"`
	Name                         *string `json:"name"`
	DevicesInputParametersTypeID *int64  `json:"devices_input_parameters_type_id"`
}

type DevicesModel struct {
	ID              int64   `json:"id"`
	SrctypeID       int32   `json:"srctype_id"`
	Name            *string `json:"name"`
	DeviceModelType *int64  `json:"device_model_type"`
	DeviceVendor    *string `json:"device_vendor"`
	CounterType     *int32  `json:"counter_type"`
	Extra           []byte  `json:"extra"`
}

type DevicesModelsHasInputParametersTypes struct {
	ID                           int64  `json:"id"`
	DevicesModelID               *int64 `json:"devices_model_id"`
	DevicesInputParametersTypeID *int64 `json:"devices_input_parameters_type_id"`
}

type DevicesParams struct {
	ID              int64      `json:"id"`
	StartValue      *float64   `json:"start_value"`
	Correction      *float64   `json:"correction"`
	ITransformation *float64   `json:"i_transformation"`
	UTransformation *float64   `json:"u_transformation"`
	ImpulseWeight   *float64   `json:"impulse_weight"`
	CorrectionDate  *time.Time `json:"correction_date"`
	StartValueDate  *time.Time `json:"start_value_date"`
	IsController    *bool      `json:"is_controller"`
}

type DevicesSensorData struct {
	ID               int64      `json:"id"`
	Value            *float64   `json:"value"`
	DeviceID         *int64     `json:"device_id"`
	CreatedAt        *time.Time `json:"created_at"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	RecordTime       *time.Time `json:"record_time"`
	PollTime         *time.Time `json:"poll_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type DevicesSrcType struct {
	ID   int64   `json:"id"`
	Name *string `json:"name"`
	Code *string `json:"code"`
}

type DevicesStatus struct {
	ID   int64   `json:"id"`
	Name *string `json:"name"`
}

type DevicesType struct {
	ID   int64   `json:"id"`
	Name *string `json:"name"`
}

type ElectroEnergyArchiveDataValue struct {
	ID               int64      `json:"id"`
	DevicesID        *int64     `json:"devices_id"`
	ApSum            *float64   `json:"ap_sum"`
	AmSum            *float64   `json:"am_sum"`
	RpSum            *float64   `json:"rp_sum"`
	RmSum            *float64   `json:"rm_sum"`
	P                *float64   `json:"p"`
	Pa               *float64   `json:"pa"`
	Pb               *float64   `json:"pb"`
	Pc               *float64   `json:"pc"`
	Q                *float64   `json:"q"`
	Qa               *float64   `json:"qa"`
	Qb               *float64   `json:"qb"`
	Qc               *float64   `json:"qc"`
	Va               *float64   `json:"va"`
	Vb               *float64   `json:"vb"`
	Vc               *float64   `json:"vc"`
	Ia               *float64   `json:"ia"`
	Ib               *float64   `json:"ib"`
	Ic               *float64   `json:"ic"`
	Fab              *float64   `json:"fab"`
	Fac              *float64   `json:"fac"`
	Fbc              *float64   `json:"fbc"`
	CosFi            *float64   `json:"cos_fi"`
	CosAb            *float64   `json:"cos_ab"`
	CosBc            *float64   `json:"cos_bc"`
	CosAc            *float64   `json:"cos_ac"`
	Freq             *float64   `json:"freq"`
	ApTariff1        *float64   `json:"ap_tariff1"`
	AmTariff1        *float64   `json:"am_tariff1"`
	RpTariff1        *float64   `json:"rp_tariff1"`
	RmTariff1        *float64   `json:"rm_tariff1"`
	ApTariff2        *float64   `json:"ap_tariff2"`
	AmTariff2        *float64   `json:"am_tariff2"`
	RpTariff2        *float64   `json:"rp_tariff2"`
	RmTariff2        *float64   `json:"rm_tariff2"`
	ApTariff3        *float64   `json:"ap_tariff3"`
	AmTariff3        *float64   `json:"am_tariff3"`
	RpTariff3        *float64   `json:"rp_tariff3"`
	RmTariff3        *float64   `json:"rm_tariff3"`
	ApTariff4        *float64   `json:"ap_tariff4"`
	AmTariff4        *float64   `json:"am_tariff4"`
	RpTariff4        *float64   `json:"rp_tariff4"`
	RmTariff4        *float64   `json:"rm_tariff4"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	ArchiveStartTime *time.Time `json:"archive_start_time"`
	ArchiveEndTime   *time.Time `json:"archive_end_time"`
	RecordTime       *time.Time `json:"record_time"`
	PollTime         *time.Time `json:"poll_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type ElectroEnergyDayArchiveData struct {
	ID               int64      `json:"id"`
	DevicesID        *int64     `json:"devices_id"`
	Tid              *int32     `json:"tid"`
	OnstartAp        *float64   `json:"onstart_ap"`
	OnstartAm        *float64   `json:"onstart_am"`
	OnstartRp        *float64   `json:"onstart_rp"`
	OnstartRm        *float64   `json:"onstart_rm"`
	Dap              *float64   `json:"dap"`
	Dam              *float64   `json:"dam"`
	Drp              *float64   `json:"drp"`
	Drm              *float64   `json:"drm"`
	OnendAp          *float64   `json:"onend_ap"`
	OnendAm          *float64   `json:"onend_am"`
	OnendRp          *float64   `json:"onend_rp"`
	OnendRm          *float64   `json:"onend_rm"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	ArchiveStartTime *time.Time `json:"archive_start_time"`
	ArchiveEndTime   *time.Time `json:"archive_end_time"`
	RecordTime       *time.Time `json:"record_time"`
	PollTime         *time.Time `json:"poll_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type ElectroEnergyMonthArchiveData struct {
	ID               int64      `json:"id"`
	DevicesID        *int64     `json:"devices_id"`
	Tid              *int32     `json:"tid"`
	OnstartAp        *float64   `json:"onstart_ap"`
	OnstartAm        *float64   `json:"onstart_am"`
	OnstartRp        *float64   `json:"onstart_rp"`
	OnstartRm        *float64   `json:"onstart_rm"`
	Dap              *float64   `json:"dap"`
	Dam              *float64   `json:"dam"`
	Drp              *float64   `json:"drp"`
	Drm              *float64   `json:"drm"`
	OnendAp          *float64   `json:"onend_ap"`
	OnendAm          *float64   `json:"onend_am"`
	OnendRp          *float64   `json:"onend_rp"`
	OnendRm          *float64   `json:"onend_rm"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	ArchiveStartTime *time.Time `json:"archive_start_time"`
	ArchiveEndTime   *time.Time `json:"archive_end_time"`
	RecordTime       *time.Time `json:"record_time"`
	PollTime         *time.Time `json:"poll_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type ElectroEnergyPowerArchiveData struct {
	ID               int64      `json:"id"`
	DevicesID        *int64     `json:"devices_id"`
	Err              *int32     `json:"err"`
	T                *int32     `json:"t"`
	Pp               *float64   `json:"pp"`
	Pm               *float64   `json:"pm"`
	Qp               *float64   `json:"qp"`
	Qm               *float64   `json:"qm"`
	MemInd           *int32     `json:"mem_ind"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	RecordTime       *time.Time `json:"record_time"`
	PollTime         *time.Time `json:"poll_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type Entrance struct {
	ID         int64      `json:"id"`
	BuildingID int64      `json:"building_id"`
	Name       *string    `json:"name"`
	AirID      *string    `json:"air_id"`
	DeletedAt  *time.Time `json:"deleted_at"`
	CreatedAt  time.Time  `json:"created_at"`
	UpdatedAt  time.Time  `json:"updated_at"`
}

type FailedJobs struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	Payload   string    `json:"payload"`
	Reason    string    `json:"reason"`
	CreatedAt time.Time `json:"created_at"`
}

type Groups struct {
	ID        uuid.UUID      `json:"id"`
	Name      string         `json:"name"`
	TenantID  types.TenantID `json:"tenant_id"`
	ParentID  uuid.UUID      `json:"parent_id"`
	CreatedAt *time.Time     `json:"created_at"`
}

type GroupsHasDevices struct {
	DeviceID int64     `json:"device_id"`
	GroupID  uuid.UUID `json:"group_id"`
}

type HeatEnergyArchiveValue struct {
	ID               int64      `json:"id"`
	ArchiveGroup     *string    `json:"archive_group"`
	TsID             *int64     `json:"ts_id"`
	DevicesID        *int64     `json:"devices_id"`
	Q1               *float64   `json:"q1"`
	Q2               *float64   `json:"q2"`
	Q3               *float64   `json:"q3"`
	Q4               *float64   `json:"q4"`
	Q5               *float64   `json:"q5"`
	Q6               *float64   `json:"q6"`
	Q7               *float64   `json:"q7"`
	Q8               *float64   `json:"q8"`
	W1               *float64   `json:"w1"`
	W2               *float64   `json:"w2"`
	W3               *float64   `json:"w3"`
	W4               *float64   `json:"w4"`
	W5               *float64   `json:"w5"`
	W6               *float64   `json:"w6"`
	W7               *float64   `json:"w7"`
	W8               *float64   `json:"w8"`
	M1               *float64   `json:"m1"`
	M2               *float64   `json:"m2"`
	M3               *float64   `json:"m3"`
	M4               *float64   `json:"m4"`
	Gm1              *float64   `json:"gm1"`
	Gm2              *float64   `json:"gm2"`
	Gm3              *float64   `json:"gm3"`
	Gm4              *float64   `json:"gm4"`
	V1               *float64   `json:"v1"`
	V2               *float64   `json:"v2"`
	V3               *float64   `json:"v3"`
	V4               *float64   `json:"v4"`
	Gv1              *float64   `json:"gv1"`
	Gv2              *float64   `json:"gv2"`
	Gv3              *float64   `json:"gv3"`
	Gv4              *float64   `json:"gv4"`
	T1               *float64   `json:"t1"`
	T2               *float64   `json:"t2"`
	T3               *float64   `json:"t3"`
	T4               *float64   `json:"t4"`
	P1               *float64   `json:"p1"`
	P2               *float64   `json:"p2"`
	P3               *float64   `json:"p3"`
	P4               *float64   `json:"p4"`
	Error            *string    `json:"error"`
	Events           *string    `json:"events"`
	Uptime           *int32     `json:"uptime"`
	Downtime         *int32     `json:"downtime"`
	Consumptabove    *int32     `json:"consumptabove"`
	Consumptbelow    *int32     `json:"consumptbelow"`
	Temperdiffbelow  *int32     `json:"temperdiffbelow"`
	Funcerror        *int32     `json:"funcerror"`
	Poweroff         *int32     `json:"poweroff"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	RecordTime       *time.Time `json:"record_time"`
	PollTime         *time.Time `json:"poll_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type HeatEnergyDayArchiveValue struct {
	ID               int64      `json:"id"`
	ArchiveGroup     *string    `json:"archive_group"`
	TsID             *int64     `json:"ts_id"`
	DevicesID        *int64     `json:"devices_id"`
	Q1               *float64   `json:"q1"`
	Q2               *float64   `json:"q2"`
	Q3               *float64   `json:"q3"`
	Q4               *float64   `json:"q4"`
	Q5               *float64   `json:"q5"`
	Q6               *float64   `json:"q6"`
	Q7               *float64   `json:"q7"`
	Q8               *float64   `json:"q8"`
	W1               *float64   `json:"w1"`
	W2               *float64   `json:"w2"`
	W3               *float64   `json:"w3"`
	W4               *float64   `json:"w4"`
	W5               *float64   `json:"w5"`
	W6               *float64   `json:"w6"`
	W7               *float64   `json:"w7"`
	W8               *float64   `json:"w8"`
	M1               *float64   `json:"m1"`
	M2               *float64   `json:"m2"`
	M3               *float64   `json:"m3"`
	M4               *float64   `json:"m4"`
	Gm1              *float64   `json:"gm1"`
	Gm2              *float64   `json:"gm2"`
	Gm3              *float64   `json:"gm3"`
	Gm4              *float64   `json:"gm4"`
	V1               *float64   `json:"v1"`
	V2               *float64   `json:"v2"`
	V3               *float64   `json:"v3"`
	V4               *float64   `json:"v4"`
	Gv1              *float64   `json:"gv1"`
	Gv2              *float64   `json:"gv2"`
	Gv3              *float64   `json:"gv3"`
	Gv4              *float64   `json:"gv4"`
	T1               *float64   `json:"t1"`
	T2               *float64   `json:"t2"`
	T3               *float64   `json:"t3"`
	T4               *float64   `json:"t4"`
	P1               *float64   `json:"p1"`
	P2               *float64   `json:"p2"`
	P3               *float64   `json:"p3"`
	P4               *float64   `json:"p4"`
	Error            *string    `json:"error"`
	Events           *string    `json:"events"`
	Uptime           *int32     `json:"uptime"`
	Downtime         *int32     `json:"downtime"`
	Consumptabove    *int32     `json:"consumptabove"`
	Consumptbelow    *int32     `json:"consumptbelow"`
	Temperdiffbelow  *int32     `json:"temperdiffbelow"`
	Funcerror        *int32     `json:"funcerror"`
	Poweroff         *int32     `json:"poweroff"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	RecordTime       *time.Time `json:"record_time"`
	PollTime         *time.Time `json:"poll_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type HeatEnergyHourArchiveValue struct {
	ID               int64      `json:"id"`
	ArchiveGroup     *string    `json:"archive_group"`
	TsID             *int64     `json:"ts_id"`
	DevicesID        *int64     `json:"devices_id"`
	Q1               *float64   `json:"q1"`
	Q2               *float64   `json:"q2"`
	Q3               *float64   `json:"q3"`
	Q4               *float64   `json:"q4"`
	Q5               *float64   `json:"q5"`
	Q6               *float64   `json:"q6"`
	Q7               *float64   `json:"q7"`
	Q8               *float64   `json:"q8"`
	W1               *float64   `json:"w1"`
	W2               *float64   `json:"w2"`
	W3               *float64   `json:"w3"`
	W4               *float64   `json:"w4"`
	W5               *float64   `json:"w5"`
	W6               *float64   `json:"w6"`
	W7               *float64   `json:"w7"`
	W8               *float64   `json:"w8"`
	M1               *float64   `json:"m1"`
	M2               *float64   `json:"m2"`
	M3               *float64   `json:"m3"`
	M4               *float64   `json:"m4"`
	Gm1              *float64   `json:"gm1"`
	Gm2              *float64   `json:"gm2"`
	Gm3              *float64   `json:"gm3"`
	Gm4              *float64   `json:"gm4"`
	V1               *float64   `json:"v1"`
	V2               *float64   `json:"v2"`
	V3               *float64   `json:"v3"`
	V4               *float64   `json:"v4"`
	Gv1              *float64   `json:"gv1"`
	Gv2              *float64   `json:"gv2"`
	Gv3              *float64   `json:"gv3"`
	Gv4              *float64   `json:"gv4"`
	T1               *float64   `json:"t1"`
	T2               *float64   `json:"t2"`
	T3               *float64   `json:"t3"`
	T4               *float64   `json:"t4"`
	P1               *float64   `json:"p1"`
	P2               *float64   `json:"p2"`
	P3               *float64   `json:"p3"`
	P4               *float64   `json:"p4"`
	Error            *string    `json:"error"`
	Events           *string    `json:"events"`
	Uptime           *int32     `json:"uptime"`
	Downtime         *int32     `json:"downtime"`
	Consumptabove    *int32     `json:"consumptabove"`
	Consumptbelow    *int32     `json:"consumptbelow"`
	Temperdiffbelow  *int32     `json:"temperdiffbelow"`
	Funcerror        *int32     `json:"funcerror"`
	Poweroff         *int32     `json:"poweroff"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	RecordTime       *time.Time `json:"record_time"`
	PollTime         *time.Time `json:"poll_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type HeatEnergyMonthArchiveValue struct {
	ID               int64      `json:"id"`
	ArchiveGroup     *string    `json:"archive_group"`
	TsID             *int64     `json:"ts_id"`
	DevicesID        *int64     `json:"devices_id"`
	Q1               *float64   `json:"q1"`
	Q2               *float64   `json:"q2"`
	Q3               *float64   `json:"q3"`
	Q4               *float64   `json:"q4"`
	Q5               *float64   `json:"q5"`
	Q6               *float64   `json:"q6"`
	Q7               *float64   `json:"q7"`
	Q8               *float64   `json:"q8"`
	W1               *float64   `json:"w1"`
	W2               *float64   `json:"w2"`
	W3               *float64   `json:"w3"`
	W4               *float64   `json:"w4"`
	W5               *float64   `json:"w5"`
	W6               *float64   `json:"w6"`
	W7               *float64   `json:"w7"`
	W8               *float64   `json:"w8"`
	M1               *float64   `json:"m1"`
	M2               *float64   `json:"m2"`
	M3               *float64   `json:"m3"`
	M4               *float64   `json:"m4"`
	Gm1              *float64   `json:"gm1"`
	Gm2              *float64   `json:"gm2"`
	Gm3              *float64   `json:"gm3"`
	Gm4              *float64   `json:"gm4"`
	V1               *float64   `json:"v1"`
	V2               *float64   `json:"v2"`
	V3               *float64   `json:"v3"`
	V4               *float64   `json:"v4"`
	Gv1              *float64   `json:"gv1"`
	Gv2              *float64   `json:"gv2"`
	Gv3              *float64   `json:"gv3"`
	Gv4              *float64   `json:"gv4"`
	T1               *float64   `json:"t1"`
	T2               *float64   `json:"t2"`
	T3               *float64   `json:"t3"`
	T4               *float64   `json:"t4"`
	P1               *float64   `json:"p1"`
	P2               *float64   `json:"p2"`
	P3               *float64   `json:"p3"`
	P4               *float64   `json:"p4"`
	Error            *string    `json:"error"`
	Events           *string    `json:"events"`
	Uptime           *int32     `json:"uptime"`
	Downtime         *int32     `json:"downtime"`
	Consumptabove    *int32     `json:"consumptabove"`
	Consumptbelow    *int32     `json:"consumptbelow"`
	Temperdiffbelow  *int32     `json:"temperdiffbelow"`
	Funcerror        *int32     `json:"funcerror"`
	Poweroff         *int32     `json:"poweroff"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	RecordTime       *time.Time `json:"record_time"`
	PollTime         *time.Time `json:"poll_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type ImpulseArchiveDataValue struct {
	ID               int64      `json:"id"`
	DevicesID        *int64     `json:"devices_id"`
	Volume           *float64   `json:"volume"`
	ImpCount         *int64     `json:"imp_count"`
	ArchType         *int32     `json:"arch_type"`
	VolumeDiff       *float64   `json:"volume_diff"`
	Value5           *float64   `json:"value5"`
	Value6           *float64   `json:"value6"`
	Value7           *float64   `json:"value7"`
	Value8           *float64   `json:"value8"`
	Value9           *float64   `json:"value9"`
	Value10          *float64   `json:"value10"`
	DiffStatus       *int32     `json:"diff_status"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	RecordTime       *time.Time `json:"record_time"`
	PollTime         *time.Time `json:"poll_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type ImpulseReportData struct {
	ID                 int64      `json:"id"`
	ImpulseCounterID   *int64     `json:"impulse_counter_id"`
	AverageDailyVolume *float64   `json:"average_daily_volume"`
	DailyIntake        *float64   `json:"daily_intake"`
	MinimumVolumeValue *float64   `json:"minimum_volume_value"`
	MaximumVolumeValue *float64   `json:"maximum_volume_value"`
	Timestamp          *time.Time `json:"timestamp"`
	Valide             *bool      `json:"valide"`
}

type Jobs struct {
	ID            uuid.UUID `json:"id"`
	Name          string    `json:"name"`
	Payload       string    `json:"payload"`
	Attempts      int64     `json:"attempts"`
	AvailableAt   time.Time `json:"available_at"`
	ReservedUntil time.Time `json:"reserved_until"`
	CreatedAt     time.Time `json:"created_at"`
}

type Mqtt struct {
	ID        int64      `json:"id"`
	Message   *string    `json:"message"`
	Status    *int32     `json:"status"`
	Topic     *string    `json:"topic"`
	Imei      *string    `json:"imei"`
	JobID     *string    `json:"job_id"`
	Timestamp *time.Time `json:"timestamp"`
}

type MvDevicesSensorDataCurrent struct {
	ID               int64      `json:"id"`
	Value            *float64   `json:"value"`
	DeviceID         *int64     `json:"device_id"`
	PollTime         *time.Time `json:"poll_time"`
	RecordTime       *time.Time `json:"record_time"`
	ServerTime       *time.Time `json:"server_time"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
}

type MvElectroEnergyArchiveDataValueCurrent struct {
	ID               int64      `json:"id"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	DevicesID        *int64     `json:"devices_id"`
	ApSum            *float64   `json:"ap_sum"`
	AmSum            *float64   `json:"am_sum"`
	RpSum            *float64   `json:"rp_sum"`
	RmSum            *float64   `json:"rm_sum"`
	ApTariff1        *float64   `json:"ap_tariff1"`
	AmTariff1        *float64   `json:"am_tariff1"`
	RpTariff1        *float64   `json:"rp_tariff1"`
	RmTariff1        *float64   `json:"rm_tariff1"`
	ApTariff2        *float64   `json:"ap_tariff2"`
	AmTariff2        *float64   `json:"am_tariff2"`
	RpTariff2        *float64   `json:"rp_tariff2"`
	RmTariff2        *float64   `json:"rm_tariff2"`
	ApTariff3        *float64   `json:"ap_tariff3"`
	AmTariff3        *float64   `json:"am_tariff3"`
	RpTariff3        *float64   `json:"rp_tariff3"`
	RmTariff3        *float64   `json:"rm_tariff3"`
	ApTariff4        *float64   `json:"ap_tariff4"`
	AmTariff4        *float64   `json:"am_tariff4"`
	RpTariff4        *float64   `json:"rp_tariff4"`
	RmTariff4        *float64   `json:"rm_tariff4"`
	P                *float64   `json:"p"`
	Pa               *float64   `json:"pa"`
	Pb               *float64   `json:"pb"`
	Pc               *float64   `json:"pc"`
	Q                *float64   `json:"q"`
	Qa               *float64   `json:"qa"`
	Qb               *float64   `json:"qb"`
	Qc               *float64   `json:"qc"`
	Va               *float64   `json:"va"`
	Vb               *float64   `json:"vb"`
	Vc               *float64   `json:"vc"`
	Ia               *float64   `json:"ia"`
	Ib               *float64   `json:"ib"`
	Ic               *float64   `json:"ic"`
	Fab              *float64   `json:"fab"`
	Fac              *float64   `json:"fac"`
	Fbc              *float64   `json:"fbc"`
	CosFi            *float64   `json:"cos_fi"`
	CosAb            *float64   `json:"cos_ab"`
	CosBc            *float64   `json:"cos_bc"`
	CosAc            *float64   `json:"cos_ac"`
	Freq             *float64   `json:"freq"`
	PollTime         *time.Time `json:"poll_time"`
	RecordTime       *time.Time `json:"record_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type MvHeatEnergyArchiveValueCurrent struct {
	ID               int64      `json:"id"`
	TsID             *int64     `json:"ts_id"`
	Error            *string    `json:"error"`
	DevicesID        *int64     `json:"devices_id"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	PollTime         *time.Time `json:"poll_time"`
	ServerTime       *time.Time `json:"server_time"`
	RecordTime       *time.Time `json:"record_time"`
	Q1               *float64   `json:"q1"`
	Q2               *float64   `json:"q2"`
	Q3               *float64   `json:"q3"`
	Q4               *float64   `json:"q4"`
	Q5               *float64   `json:"q5"`
	Q6               *float64   `json:"q6"`
	Q7               *float64   `json:"q7"`
	Q8               *float64   `json:"q8"`
	W1               *float64   `json:"w1"`
	W2               *float64   `json:"w2"`
	W3               *float64   `json:"w3"`
	W4               *float64   `json:"w4"`
	W5               *float64   `json:"w5"`
	W6               *float64   `json:"w6"`
	W7               *float64   `json:"w7"`
	W8               *float64   `json:"w8"`
	M1               *float64   `json:"m1"`
	M2               *float64   `json:"m2"`
	M3               *float64   `json:"m3"`
	M4               *float64   `json:"m4"`
	Gm1              *float64   `json:"gm1"`
	Gm2              *float64   `json:"gm2"`
	Gm3              *float64   `json:"gm3"`
	Gm4              *float64   `json:"gm4"`
	V1               *float64   `json:"v1"`
	V2               *float64   `json:"v2"`
	V3               *float64   `json:"v3"`
	V4               *float64   `json:"v4"`
	Gv1              *float64   `json:"gv1"`
	Gv2              *float64   `json:"gv2"`
	Gv3              *float64   `json:"gv3"`
	Gv4              *float64   `json:"gv4"`
	T1               *float64   `json:"t1"`
	T2               *float64   `json:"t2"`
	T3               *float64   `json:"t3"`
	T4               *float64   `json:"t4"`
	P1               *float64   `json:"p1"`
	P2               *float64   `json:"p2"`
	P3               *float64   `json:"p3"`
	P4               *float64   `json:"p4"`
}

type MvImpulseArchiveDataValueCurrent struct {
	ID               int64      `json:"id"`
	DevicesChannelID *int64     `json:"devices_channel_id"`
	DevicesID        *int64     `json:"devices_id"`
	Volume           *float64   `json:"volume"`
	ImpCount         *int64     `json:"imp_count"`
	DiffStatus       *int32     `json:"diff_status"`
	PollTime         *time.Time `json:"poll_time"`
	RecordTime       *time.Time `json:"record_time"`
	ServerTime       *time.Time `json:"server_time"`
}

type MvUspdTelemetryCurrent struct {
	UspdID     *int64     `json:"uspd_id"`
	State      *int32     `json:"state"`
	Signal     *int32     `json:"signal"`
	Sq         *int64     `json:"sq"`
	Earfcn     *int64     `json:"earfcn"`
	Pcid       *int64     `json:"pcid"`
	Rsrp       *int64     `json:"rsrp"`
	Rsrq       *int64     `json:"rsrq"`
	Rssi       *int64     `json:"rssi"`
	Snr        *int64     `json:"snr"`
	Bat        *int32     `json:"bat"`
	ID         int64      `json:"id"`
	Alerts     []byte     `json:"alerts"`
	RecordTime *time.Time `json:"record_time"`
	ServerTime *time.Time `json:"server_time"`
}

type ObjectType struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type PollingStates struct {
	ID          int64  `json:"id"`
	Level       string `json:"level"`
	Description string `json:"description"`
	Color       string `json:"color"`
}

type Region struct {
	ID   int64   `json:"id"`
	Name *string `json:"name"`
}

type ReportsHistory struct {
	ID            uuid.UUID      `json:"id"`
	Reportunituri string         `json:"reportunituri"`
	UserID        types.UserID   `json:"user_id"`
	Status        string         `json:"status"`
	RequestID     uuid.UUID      `json:"request_id"`
	ExportsID     uuid.UUID      `json:"exports_id"`
	CreatedAt     *time.Time     `json:"created_at"`
	TenantID      types.TenantID `json:"tenant_id"`
}

type ReportsListHasDeviceModels struct {
	ID            int64 `json:"id"`
	DeviceModelID int64 `json:"device_model_id"`
	ReportListID  int64 `json:"report_list_id"`
}

type ReportsListInputControls struct {
	ID             int32   `json:"id"`
	ReportsListID  int64   `json:"reports_list_id"`
	Name           string  `json:"name"`
	Label          string  `json:"label"`
	Type           string  `json:"type"`
	Required       *bool   `json:"required"`
	IsJasper       bool    `json:"is_jasper"`
	IsDevice       bool    `json:"is_device"`
	ValidationRule []byte  `json:"validation_rule"`
	Uri            *string `json:"uri"`
}

type ReportsLists struct {
	ID          int64      `json:"id"`
	Sort        *int32     `json:"sort"`
	Label       string     `json:"label"`
	Description *string    `json:"description"`
	Uri         *string    `json:"uri"`
	Approved    *bool      `json:"approved"`
	DeletedAt   *time.Time `json:"deleted_at"`
	CreatedAt   time.Time  `json:"created_at"`
}

type StateType struct {
	ID          int64   `json:"id"`
	Description *string `json:"description"`
	Comment     *string `json:"comment"`
}

type Street struct {
	ID        int64      `json:"id"`
	CityID    int64      `json:"city_id"`
	Name      string     `json:"name"`
	AirID     *string    `json:"air_id"`
	DeletedAt *time.Time `json:"deleted_at"`
	CreatedAt time.Time  `json:"created_at"`
	UpdatedAt time.Time  `json:"updated_at"`
}

type Tenants struct {
	ID        types.TenantID `json:"id"`
	Name      string         `json:"name"`
	CreatedAt *time.Time     `json:"created_at"`
}

type Uk struct {
	ID          int64      `json:"id"`
	Name        *string    `json:"name"`
	Description *string    `json:"description"`
	DeletedAt   *time.Time `json:"deleted_at"`
	CreatedAt   *time.Time `json:"created_at"`
	UpdatedAt   *time.Time `json:"updated_at"`
}

type Users struct {
	ID        types.UserID   `json:"id"`
	Position  *string        `json:"position"`
	Email     *string        `json:"email"`
	Username  string         `json:"username"`
	IsActive  bool           `json:"is_active"`
	TenantID  types.TenantID `json:"tenant_id"`
	Role      string         `json:"role"`
	Comment   *string        `json:"comment"`
	Phone     *string        `json:"phone"`
	LastLogin *time.Time     `json:"last_login"`
	DeletedAt *time.Time     `json:"deleted_at"`
	CreatedAt time.Time      `json:"created_at"`
	UpdatedAt time.Time      `json:"updated_at"`
}

type UsersHasDevices struct {
	DeviceID uuid.UUID    `json:"device_id"`
	UserID   types.UserID `json:"user_id"`
	Read     bool         `json:"read"`
	Write    bool         `json:"write"`
}

type UsersHasUspd struct {
	UspdID int64        `json:"uspd_id"`
	UserID types.UserID `json:"user_id"`
	Read   bool         `json:"read"`
	Write  bool         `json:"write"`
}

type UsersRole struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Label string `json:"label"`
}

type UsersSettings struct {
	ID        int64        `json:"id"`
	UserID    types.UserID `json:"user_id"`
	Payload   []byte       `json:"payload"`
	CreatedAt *time.Time   `json:"created_at"`
	UpdatedAt *time.Time   `json:"updated_at"`
}

type UsersStatus struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type Uspd struct {
	ID             int64          `json:"id"`
	EntranceID     *int64         `json:"entrance_id"`
	UspdTypeID     *int64         `json:"uspd_type_id"`
	Name           *string        `json:"name"`
	Imei           *string        `json:"imei"`
	Sn             *string        `json:"sn"`
	MqttTopic      *string        `json:"mqtt_topic"`
	AddressID      *int64         `json:"address_id"`
	Msisdn         *string        `json:"msisdn"`
	JsonData       []byte         `json:"json_data"`
	IsActive       *bool          `json:"is_active"`
	MqttUsername   *string        `json:"mqtt_username"`
	MqttAuthkey    *string        `json:"mqtt_authkey"`
	Comment        *string        `json:"comment"`
	MqttClientName *string        `json:"mqtt_client_name"`
	Imsi           *string        `json:"imsi"`
	Iccid          *string        `json:"iccid"`
	Phone          *string        `json:"phone"`
	IpAddress      *netip.Prefix  `json:"ip_address"`
	Devid          uuid.UUID      `json:"devid"`
	TenantID       types.TenantID `json:"tenant_id"`
	LastSyncDate   *time.Time     `json:"last_sync_date"`
	CreatedAt      *time.Time     `json:"created_at"`
	UpdatedAt      *time.Time     `json:"updated_at"`
	Uuid           uuid.UUID      `json:"uuid"`
	DeletedAt      *time.Time     `json:"deleted_at"`
	PollingStateID *int32         `json:"polling_state_id"`
	ModelID        *int64         `json:"model_id"`
}

type UspdEvents struct {
	ID        uuid.UUID  `json:"id"`
	Name      string     `json:"name"`
	UspdID    int64      `json:"uspd_id"`
	CreatedAt *time.Time `json:"created_at"`
	Data      []byte     `json:"data"`
}

type UspdModel struct {
	ID                      int64   `json:"id"`
	Name                    *string `json:"name"`
	UspdTypeID              *int32  `json:"uspd_type_id"`
	UspdVendorID            *int32  `json:"uspd_vendor_id"`
	UspdDiscreteNormalState *int32  `json:"uspd_discrete_normal_state"`
}

type UspdState struct {
	UspdID         int64  `json:"uspd_id"`
	StateCheckConf []byte `json:"state_check_conf"`
	State          int32  `json:"state"`
	Alert          []byte `json:"alert"`
}

type UspdTelemetry struct {
	State      *int32     `json:"state"`
	Signal     *int32     `json:"signal"`
	Sq         *int64     `json:"sq"`
	Earfcn     *int64     `json:"earfcn"`
	Pcid       *int64     `json:"pcid"`
	Rsrp       *int64     `json:"rsrp"`
	Rsrq       *int64     `json:"rsrq"`
	Rssi       *int64     `json:"rssi"`
	Snr        *int64     `json:"snr"`
	Bat        *int32     `json:"bat"`
	UspdID     *int64     `json:"uspd_id"`
	ID         int64      `json:"id"`
	Alerts     []byte     `json:"alerts"`
	RecordTime *time.Time `json:"record_time"`
	ServerTime *time.Time `json:"server_time"`
}

type UspdType struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Param []byte `json:"param"`
}

type UspdVendor struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

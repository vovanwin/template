// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package dbsqlc

import (
	"context"

	"app/internal/shared/types"
	"github.com/google/uuid"
)

const countUserDevicesWithPermissions = `-- name: CountUserDevicesWithPermissions :one
SELECT COUNT(devices.id)
FROM devices
         JOIN users_has_devices ON users_has_devices.device_id = devices.id
WHERE devices.uuid = ANY($1::uuid[])
  AND devices.tenant_id = $2
  AND users_has_devices.user_id = $3
  AND users_has_devices.read = true
`

type CountUserDevicesWithPermissionsParams struct {
	Uuiddevices []uuid.UUID    `json:"uuiddevices"`
	TenantID    types.TenantID `json:"tenant_id"`
	UserID      types.UserID   `json:"user_id"`
}

// Проверить что у пользователя есть разрешения на все устройства
func (q *Queries) CountUserDevicesWithPermissions(ctx context.Context, arg CountUserDevicesWithPermissionsParams) (int64, error) {
	row := q.db.QueryRow(ctx, countUserDevicesWithPermissions, arg.Uuiddevices, arg.TenantID, arg.UserID)
	var count int64
	err := row.Scan(&count)
	return count, err
}

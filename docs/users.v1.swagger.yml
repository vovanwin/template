openapi: 3.0.3
info:
  title: Запросы на аутентификацию и работа с авторизованым пользователем
  version: v1

servers:
  - url: http://localhost:8080/api/v1
    description: Для локальной разработки
  - url: https://omv-dev.demo.megafon.ru/api/v1
    description: Development server
paths:
  /auth/me:
    get:
      security:
        - bearerAuth: [ ]
      description: Информация о текущем пользователе
      summary: текущий пользователь
      parameters:
        - $ref: "global/parameters.yml#/parameters/XRequestIDHeader"
      responses:
        "200":
          description: успешный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserMe"
        default:
          description: Пользователь неавторизован пользователя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/login:
    post:
      description: Информация о текущем пользователе
      summary: текущий пользователь
      parameters:
        - $ref: "global/parameters.yml#/parameters/XRequestIDHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
        default:
          description: Ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
security:
  - bearerAuth: [ ]

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      description: Represents error object
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
      required:
        - code
        - message

    AuthToken:
      type: object
      required: [ access, refresh ]
      properties:
        access:
          description: токен для авторизации
          type: string
        refresh:
          description: токен для получения нового access токена
          type: string

    UserMe:
      type: object
      required: [ id,
                  email,
                  tenant,
                  created_at,
                  settings,
                  components ]
      properties:
        id:
          description: токен для авторизации
          type: string
          format: uuid
        email:
          description: email пользователя, а также его логин. Может не быть почтовым адресом.
          type: string
        role:
          description: Роль текущего пользователя
          type: string
        tenant:
          description: Тенант текущего пользователя
          type: string
        created_at:
          description: Время создания пользователя
          type: string
          format: date-time
        settings:
          type: string
          description: Тут хранятся все настройки пользователя для фронтенда, фильтры, таймзона и тд
        components:
          description: разделы меню доступные пользователю (сейчас захардкожено)
          type: array
          items:
            type: string
            example: /monitoringmap

    LoginRequest:
      type: object
      required: [ username, password ]
      properties:
        username:
          description: Логин пользователя. Может быть как email так и логином.
          type: string
        password:
          description: пароль
          type: string
    RefreshRequest:
      type: object
      required: [ access, refresh ]
      properties:
        refresh:
          description: рефреш токен, чтобы получить новый токен и рефреш токены
          type: string
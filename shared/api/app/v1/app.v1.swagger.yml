openapi: 3.0.3
info:
  title: Запросы на аутентификацию и работа с авторизованым пользователем
  version: v1

servers:
  - url: http://localhost:8080
    description: Для локальной разработки
  - url: https://omv-dev.demo.megafon.ru
    description: Development server
paths:
  /auth/me:
    get:
      security:
        - bearerAuth: [ ]
      description: Информация о текущем пользователе
      summary: текущий пользователь
      parameters:
        - $ref: "global/parameters.yml#/parameters/XRequestIDHeader"
        - $ref: "global/parameters.yml#/parameters/ContentType"
      responses:
        "200":
          description: успешный запрос
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserMe"
        default:
          description: Пользователь неавторизован пользователя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/login:
    post:
      security: []  # Отключаем авторизацию для login
      description: Авторизация пользователя по email и паролю
      summary: Вход в систему
      parameters:
        - $ref: "global/parameters.yml#/parameters/XRequestIDHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
        default:
          description: Ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/logout:
    post:
      security:
        - bearerAuth: [ ]
      description: Выход из системы (logout)
      summary: Выход из системы
      parameters:
        - $ref: "global/parameters.yml#/parameters/XRequestIDHeader"
      responses:
        "200":
          description: Успешный выход
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogoutResponse"
        default:
          description: Ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/refresh:
    post:
      security: []  # Отключаем авторизацию для refresh
      description: Обновление токенов с помощью refresh токена
      summary: Обновление токенов
      parameters:
        - $ref: "global/parameters.yml#/parameters/XRequestIDHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshRequest"
      responses:
        "200":
          description: успешно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
        default:
          description: Ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      description: Represents error object
      type: object
      properties:
        code:
          type: integer
          format: int64
        message:
          type: string
      required:
        - code
        - message

    AuthToken:
      type: object
      required: [ access_token, refresh_token, user_id, user_email ]
      properties:
        access_token:
          description: Access JWT токен для авторизации
          type: string
        refresh_token:
          description: Refresh токен для обновления access токена
          type: string
        user_id:
          description: ID пользователя
          type: string
          format: uuid
        user_email:
          description: Email пользователя
          type: string

    UserMe:
      type: object
      required: [ id,
                  email,
                  tenant,
                  created_at,
                  settings,
                  components ]
      properties:
        id:
          description: токен для авторизации
          type: string
          format: uuid
        email:
          description: email пользователя, а также его логин. Может не быть почтовым адресом.
          type: string
        role:
          description: Роль текущего пользователя
          type: string
        tenant:
          description: Тенант текущего пользователя
          type: string
        created_at:
          description: Время создания пользователя
          type: string
          format: date-time
        settings:
          type: string
          description: Тут хранятся все настройки пользователя для фронтенда, фильтры, таймзона и тд
        components:
          description: разделы меню доступные пользователю (сейчас захардкожено)
          type: array
          items:
            type: string
            example: /monitoringmap

    LoginRequest:
      type: object
      required: [ email, password ]
      properties:
        email:
          description: Email пользователя для входа
          type: string
          format: email
        password:
          description: Пароль пользователя
          type: string
          minLength: 6

    LogoutResponse:
      type: object
      required: [ message ]
      properties:
        message:
          description: Сообщение об успешном выходе
          type: string
          example: "Successfully logged out"

    RefreshRequest:
      type: object
      required: [ refresh_token ]
      properties:
        refresh_token:
          description: рефреш токен, чтобы получить новый access и refresh токены
          type: string